language: rust
cache: cargo
matrix:
  # allow_failures:
  #   - rust: nightly
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin

    # Beta channel.
    # - os: linux
      # rust: beta
      # env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: beta
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: beta
    #   env: TARGET=x86_64-apple-darwin

    # Nightly channel.
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu
    # Disabled to reduce total CI time
    # - os: linux
    #   rust: nightly
    #   env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-gnu
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-musl
    # - os: osx
    #   rust: nightly
    #   env: TARGET=x86_64-apple-darwin

    # Minimum Rust supported channel.
    # - os: linux
      # rust: 1.31.0
      # env: TARGET=x86_64-unknown-linux-gnu
    # - os: linux
      # rust: 1.31.0
      # env: TARGET=x86_64-unknown-linux-musl
    # - os: linux
      # rust: 1.31.0
      # env: TARGET=i686-unknown-linux-gnu
    # - os: linux
      # rust: 1.31.0
      # env: TARGET=i686-unknown-linux-musl
    # - os: osx
      # rust: 1.31.0
      # env: TARGET=x86_64-apple-darwin

    # Code formatting check
    - os: linux
      rust: nightly
      # skip the global install step
      install:
        - cargo install --debug --force rustfmt-nightly
      script: cargo fmt -- --check

sudo: required

before_install:
  - ci/before_install.bash

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=travis-rust

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "KRdGf7NtRcB+zkQIJ0auH89lXAfTi5OPADtee4ZAwcbmI1PmBQL+UKpIaItNKpTJoLhTqc2pamCrMtEQI6ZN+TbJVtYF5GjWVRrJlJbB/dgO93/4J84/wFTgtbpXDl8DUtxEsnTJ6N6Cbj6onL76ZR0wnwkbspcbe/1UJ+HkmhqLPST5bdD1H6c9PG9UqYp+ZT4HbrhTc0zghW+VrlPlt9h2K7pOGV9dPf1AUaXcKwGB51i1AfxB3OveMRxsd2st7Q04ueKSeqkdCasM+ItgQZ4Eg3/8/QINVo8HLRgG8tEd6oh2wRcylELkjpeYSHUYg0Q4z+uQIJuU+13f6gbne8l86Xb5ogb46kLl4KvzNUeFA5WGSs53qsXoO3xVtesM4t89BonqWqrFfu8FJmP2zvHxQM8CO+oghwZalG1dhs8plKSIBn8x/YNAyl2A95HDYJH8v1BKCwqNcDiu+yh2a6xT1fkKz6kjWS8OHa9IObJEvQenCDapg1TXy7jp5Gr+BKB3rD+iH1BmqD9DHBn6bFv8XMCPKA2Zp4L37/WTm10OxJSQL6A0GDfQsQHO4qjIT6XvaL2Pz2Ucl+xqqiU4gexhrF1UaBy7L04YT5JyTQDkwk0kRagvbEdHRx1oMkvgzf8mcpPG3TvRWFH2RVUSthc+fY6eB+bCd890SvKYW3I="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
